import { EventTypes } from '../coordinator/connection/types';
import type { SfuEvent } from '../gen/video/sfu/event/events';
export type SfuEventKinds = NonNullable<SfuEvent['eventPayload']['oneofKind']>;
export declare const isSfuEvent: (eventName: SfuEventKinds | EventTypes) => eventName is SfuEventKinds;
export type SfuEventListener = (event: SfuEvent) => void;
export declare class Dispatcher {
    private subscribers;
    private readonly logger;
    dispatch: (message: SfuEvent) => void;
    on: (eventName: SfuEventKinds, fn: SfuEventListener) => () => void;
    off: (eventName: SfuEventKinds, fn: SfuEventListener) => void;
    offAll: (eventName?: SfuEventKinds) => void;
}
